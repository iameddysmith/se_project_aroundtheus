!function(){"use strict";class e{constructor(e,t,s,i,r){this._data={name:e.name,link:e.link,id:e._id,isLiked:e.isLiked},this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClick=r,this._cardSelector=t}_setEventListeners(){this._likeIcon.addEventListener("click",(()=>{this.toggleLike()})),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteClick(this._data.id,this._cardElement)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}toggleLike(){const e=this._data.isLiked;this._handleLikeClick(this._data.id,e).then((()=>{this._data.isLiked=!this._data.isLiked,this._likeIcon.classList.toggle("card__react-button_active")})).catch((e=>{console.error("Error toggling like status:",e)}))}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._data.name,this._cardImageEl.src=this._data.link,this._cardImageEl.alt="Photo of "+this._data.name,this._likeIcon=this._cardElement.querySelector(".card__react-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this._data.isLiked?this._likeIcon.classList.add("card__react-button_active"):this._likeIcon.classList.remove("card__react-button_active"),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_enableButton(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}disableButton(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():this._enableButton()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._enableButton()}setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitBtn=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(e)})),this.setEventListeners()}}class s{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class r extends i{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._submitBtn=this._popupForm.querySelector(".modal__save-button"),this._defaultText=this._submitBtn.textContent}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}reset(){this._popupForm&&this._popupForm.reset()}setEventListeners(){super.setEventListeners(),this._popupForm&&this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setSubmitHandler(e){this._handleFormSubmit=e}setLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this._defaultText;this._submitBtn&&(e?(this._submitBtn.textContent=t,this._submitBtn.setAttribute("disabled",!0)):(this._submitBtn.textContent=s,this._submitBtn.removeAttribute("disabled")))}}const n={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button-disabled",inputErrorClass:"modal__form_input_type_error",errorClass:"modal__form-input-error-visible"},a={profileEditBtn:document.querySelector("#profile-edit-btn"),profileTitleInput:document.querySelector("#profile-title-input"),profileEditForm:document.forms["profile-form"],profileDescriptionInput:document.querySelector("#profile-description-input"),placesAddBtn:document.querySelector("#places-add-btn"),placeAddForm:document.forms["add-place-form"],avatarUpdateBtn:document.querySelector("#avatar-save-btn"),avatarForm:document.forms["update-avatar-form"]},{profileEditBtn:o,profileTitleInput:l,profileEditForm:d,profileDescriptionInput:c,placesAddBtn:h,placeAddForm:_,avatarUpdateBtn:u,avatarForm:m}=a,p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers})}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers})}editUserInfo(e,t){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}addNewPlace(e,t){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})})}removePlace(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}updateAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addLikeReact(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLikeReact(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"86ad626a-488e-4505-926f-04913062aa19","content-type":"application/json"}});function v(e){k.open(e)}const f=new t(n,d),E=new t(n,_),b=new t(n,m),g=new r("#profile-edit-modal",(function(e){y((function(){return p.editUserInfo(e.title,e.description).then((e=>{w.setUserInfo(e)}))}),g,"Saving...","Save",!1)})),L=new r("#places-add-modal",(function(e){y((function(){const t={name:e.title,link:e.url};return p.addNewPlace(t.name,t.link).then((e=>{const t=B({name:e.name,link:e.link,_id:e._id});q.addItem(t)}))}),L,"Saving...","Save",!0)})),S=new r("#avatar-update-modal",(function(e){let{url:t}=e;y((function(){return p.updateAvatar(t).then((()=>{w.updateAvatar(t)}))}),S,"Saving...","Save",!0)})),k=new class extends i{constructor(e){super(e),this._previewImage=this._popupElement.querySelector(".modal__image-preview"),this._previewTitle=this._popupElement.querySelector(".modal__image-caption")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._previewTitle.textContent=e.name,super.open()}}("#places-preview-modal"),I=new r("#places-delete-modal",(()=>{}));function y(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Save",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return t.setLoading(!0,s),e().then((()=>{t.close(),t.reset(),r?t.setLoading(!0):t.setLoading(!1)})).catch((e=>{console.error("Error:",e)})).finally((()=>{t.setLoading(r,i)}))}function C(e,t){I.setSubmitHandler((()=>{y((function(){return p.removePlace(e).then((()=>{t.remove()}))}),I,"Removing...","Yes",!1)})),I.open()}function B(t){return new e(t,"#card-template",v,C,U).getView()}let q;g.setEventListeners(),k.setEventListeners(),S.setEventListeners(),L.setEventListeners(),I.setEventListeners(),b.enableValidation(),f.enableValidation(),E.enableValidation(),p.getInitialCards().then((e=>{q=new s({items:e,renderer:e=>B(e)},".cards__list"),q.renderItems()})).catch((e=>console.error(e)));const w=new class{constructor(e,t,s){this._profileName=document.querySelector(e),this._profileJob=document.querySelector(t),this._profileAvatar=document.querySelector(s)}updateAvatar(e){this._profileAvatar.src=e,this._profileAvatar.alt=this._profileName.textContent}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent,avatar:this._profileAvatar.src}}setUserInfo(e){let{name:t,about:s,avatar:i}=e;this._profileName.textContent=t,this._profileJob.textContent=s,i?this.updateAvatar(i):(this._profileAvatar.src="./images/avatar_default.png",this._profileAvatar.alt=t)}}(".profile__title",".profile__description",".profile__image");function U(e,t){return t?p.removeLikeReact(e):p.addLikeReact(e)}p.getUserInfo().then((e=>{w.setUserInfo(e)})).catch((e=>console.error(e))),o.addEventListener("click",(()=>{const{name:e,job:t}=w.getUserInfo();l.value=e,c.value=t,g.open(),f.resetValidation()})),h.addEventListener("click",(()=>{L.open()})),u.addEventListener("click",(()=>{S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,